# computing environment setup
source /lambda_stor/homes/yanyu.liang/conda_init.sh
conda activate tensorflow
# source /homes/yanyul/tensorflow_env_cuda9.sh
export CUDA_VISIBLE_DEVICES=2

thisdir=`pwd`

# pre-specifics
WORKDIR=/lambda_stor/data/yanyul/GitHub/ptrs-tf/code
cd $WORKDIR

# params
holdout_size=5000
train_hdf5=/lambda_stor/data/yanyul/washington_UKB/predicted_expression_tf2_split_british/ukb_imp_x_ctimp_Whole_Blood_British-train.hdf5
data_scheme=/lambda_stor/data/yanyul/GitHub/ptrs-tf/misc_files/data_scheme.yaml
lambda_params=/lambda_stor/data/yanyul/GitHub/ptrs-tf/misc_files/lambda_seq_new.yaml


# output
OUTDIR=/lambda_stor/data/yanyul/washington_UKB/ptrs-tf/models_new
tag=elastic_net_ptrs_gtex_british_split_british_pt
logfile=$OUTDIR/$tag.log

python train_ptrs.py \
  --logfile $logfile \
  --out_prefix $OUTDIR/$tag \
  --size_of_data_to_hold $holdout_size \
  --data_hdf5 British:$train_hdf5 \
  --data_scheme_yaml $data_scheme \
  --alpha_seq 0.1 \
  --all_training \
  --lambda_dict $lambda_params \
  --pt_cutoffs 1e-6,5e-6,1e-5,5e-5,1e-4,5e-4,1e-3,5e-3,0.01,0.05,0.1,0.5,1 \
  > $thisdir/run_elastic_net_split_british_pt.log 2>&1
